// プロデル単体テスト評価用手順 //
// Copyright(C) 2011 utopiat.net. All rights reserved.

テストケースとは
	//assert
	[値]が、正しいはずかどうかを判定する手順
		無として値が正しいはず
		それを返す
	終わり
	[テスト名]として、[値]が、正しいはずかどうかを判定する手順
		もし値なら、
			○を返す
		そうでなければ
			テスト名として失敗させる
			×を返す
		もし終わり
	終わり
	[値]が、正しくないかどうかを判定する手順
		無として値が正しくないはず
		それを返す
	終わり
	[テスト内容]として、[値]が、正しくないかどうかを判定する手順
		もし値なら、
			テスト内容として失敗させる
			×を返す
		そうでなければ
			○を返す
		もし終わり
	終わり

	// assert_equal
	[値1]が、[値2]と、等しいはずかどうかを判定する手順
		無として値1が値2と同じなはず
		それを返す
	終わり
	[テスト名]として、[値1]が、[値2]に、等しいはずかどうかを判定する手順
		テスト名として値1が値2と同じなはず
		それを返す
	終わり
	[テスト名]として、[値1]が、[値2]と、等しいはずかどうかを判定する手順
		もし値1が値2なら、
			○を返す
		そうでなければ
			テスト名&「('[値1]'='[値2]')」として失敗させる
			×を返す
		もし終わり
	終わり
	[値1]が、[値2]と、同じなはずかどうかを判定する手順
		無として値1が値2と等しいはず
		それを返す
	終わり
	[テスト名]として、[値1]が、[値2]と、同じなはずかどうかを判定する手順
		テスト名として値1が値2と等しいはず
		それを返す
	終わり

	// assert_not_equal
	[値1]が、[値2]と、異なるはずかどうかを判定する手順
		無として値1が値2と違うはず
		それを返す
	終わり
	[テスト名]として、[値1]が、[値2]と、異なるはずかどうかを判定する手順
		もし値1が値2なら、
			テスト名&「('[値1]'='[値2]')」として失敗させる
			×を返す
		そうでなければ
			○を返す
		もし終わり
	終わり
	[値1]が、[値2]と、違うはずかどうかを判定する手順
		無として値1が値2と異なるはず
		それを返す
	終わり
	[テスト名]として、[値1]が、[値2]と、違うはずかどうかを判定する手順
		テスト名として値1が値2と異なるはず
		それを返す
	終わり

	// assert_nil(object, message="")
	[値]が、無であるはずかどうかを判定する手順
		無として値が無であるはず
		それを返す
	終わり
	[テスト名]として、[値]が、無であるはずかどうかを判定する手順
		もし値が無なら、
			○を返す
		そうでなければ
			テスト名として失敗させる
			×を返す
		もし終わり
	終わり

	// assert_not_nil(object, message="")
	[値]が、無でないかどうかを判定する手順
		無として値が無でないはず
		それを返す
	終わり
	[テスト名]として、[値]が、無でないかどうかを判定する手順
		もし値が無なら、
			テスト名として失敗させる
			×を返す
		そうでなければ
			○を返す
		もし終わり
	終わり
	// assert_nothing_thrown(message="")
	[プログラム]で、例外が、発生しないかどうかを判定する手順
		無としてプログラムで例外が発生しないはず
		それを返す
	終わり
	[テスト名]として、[プログラム]で、例外が、発生しないかどうかを判定する手順
		結果は、○
		例外監視
			プログラムを実行する
		発生した場合
			結果は、×
		監視終わり
		もし結果が×なら
			テスト名として失敗させる
			×を返す
		そうでなければ
			○を返す
		もし終わり
	終わり
	// assert_thrown(message="")
	[プログラム]で、例外が、発生するはずかどうかを判定する手順
		無としてプログラムで例外が発生するはず
		それを返す
	終わり
	[テスト名]として、[プログラム]で、例外が、発生するはずかどうかを判定する手順
		結果は、×
		例外監視
			プログラムを実行する
		発生した場合
			結果は、○
		監視終わり
		もし結果が×なら
			テスト名として失敗させる
			×を返す
		そうでなければ
			○を返す
		もし終わり
	終わり
	// 常に失敗
	失敗させる手順
		「テストに失敗しました」というエラーを発生させる
	終わり
	[テスト名]として、失敗させる手順
		もしテスト名が無なら
			「テストに失敗しました」というエラーを発生させる
		そうでなければ
			「[テスト名]に失敗しました」というエラーを発生させる
		もし終わり
	終わり
終わり